/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v1/register": {
    /** Register a new user by email */
    post: {
      requestBody: {
        content: {
          "application/json": {
            /** Format: email */
            email: string;
          };
        };
      };
      responses: {
        /** @description Verification code sent */
        200: {
          content: {
            "application/json": components["schemas"]["ApiResponse"];
          };
        };
        /** @description Validation error */
        422: {
          content: {
            "application/json": components["schemas"]["ApiResponse"];
          };
        };
      };
    };
  };
  "/api/v1/verify-email": {
    /** Verify email using 6-digit code */
    post: {
      requestBody: {
        content: {
          "application/json": {
            /** Format: email */
            email: string;
            code: string;
          };
        };
      };
      responses: {
        /** @description Email verified */
        200: {
          content: {
            "application/json": components["schemas"]["ApiResponse"] & {
              content?: components["schemas"]["AuthTokens"];
            };
          };
        };
        /** @description Invalid or expired code */
        400: {
          content: never;
        };
        /** @description Registration request not found */
        404: {
          content: never;
        };
        /** @description Validation error */
        422: {
          content: never;
        };
      };
    };
  };
  "/api/v1/create-password": {
    /** Create password after successful verification */
    post: {
      requestBody: {
        content: {
          "application/json": {
            password: string;
            password_confirmation: string;
          };
        };
      };
      responses: {
        /** @description Password created */
        200: {
          content: never;
        };
        /** @description Generic error */
        400: {
          content: never;
        };
        /** @description Validation error */
        422: {
          content: never;
        };
      };
    };
  };
  "/api/v1/set-role": {
    /** Set the user role (guest|student|guardian) */
    post: {
      requestBody: {
        content: {
          "application/json": {
            /** @enum {string} */
            user_role: "guest" | "student" | "guardian";
          };
        };
      };
      responses: {
        /** @description Role set */
        200: {
          content: never;
        };
        /** @description Invalid role */
        400: {
          content: never;
        };
        /** @description Validation error */
        422: {
          content: never;
        };
      };
    };
  };
  "/api/v1/resend-verification-code": {
    /** Resend registration verification code */
    post: {
      requestBody: {
        content: {
          "application/json": {
            /** Format: email */
            email: string;
          };
        };
      };
      responses: {
        /** @description Code resent */
        200: {
          content: never;
        };
        /** @description User not found */
        404: {
          content: never;
        };
        /** @description Validation error */
        422: {
          content: never;
        };
        /** @description Sending error */
        500: {
          content: never;
        };
      };
    };
  };
  "/api/v1/login": {
    /** Login with email/phone and password */
    post: {
      requestBody: {
        content: {
          "application/json": {
            email_phone: string;
            password: string;
          };
        };
      };
      responses: {
        /** @description Logged in */
        200: {
          content: {
            "application/json": components["schemas"]["ApiResponse"] & {
              content?: components["schemas"]["AuthTokens"];
            };
          };
        };
        /** @description Suspended */
        400: {
          content: never;
        };
        /** @description Invalid credentials or inactive */
        401: {
          content: never;
        };
        /** @description Validation error */
        422: {
          content: never;
        };
      };
    };
  };
  "/api/v1/google/redirect": {
    /** Login/Register with Google */
    post: {
      responses: {
        /** @description Success */
        200: {
          content: never;
        };
      };
    };
  };
  "/api/v1/logout": {
    /** Logout current user */
    post: {
      responses: {
        /** @description Logged out */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
      };
    };
  };
  "/api/v1/profile": {
    /** Get user profile */
    get: {
      responses: {
        /** @description Profile details */
        200: {
          content: {
            "application/json": components["schemas"]["ApiResponse"] & {
              content?: {
                user?: components["schemas"]["User"];
              };
            };
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
      };
    };
  };
  "/api/v1/profile/edit": {
    /** Edit user profile */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["ProfileUpdateData"];
        };
      };
      responses: {
        /** @description Updated profile */
        200: {
          content: {
            "application/json": components["schemas"]["ApiResponse"] & {
              content?: {
                user?: components["schemas"]["User"];
              };
            };
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Validation error */
        422: {
          content: never;
        };
      };
    };
  };
  "/api/v1/profile/edit/password": {
    /** Change password */
    post: {
      requestBody: {
        content: {
          "application/json": {
            current_password: string;
            new_password: string;
            new_password_confirmation: string;
          };
        };
      };
      responses: {
        /** @description Password changed */
        200: {
          content: never;
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Validation error or incorrect current password */
        422: {
          content: never;
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    ApiResponse: {
      success: boolean;
      message: string;
      content?: unknown;
      errors?: Record<string, never> | null;
      code: number;
    };
    User: {
      id?: number;
      name?: string | null;
      username?: string | null;
      email?: string;
      phone?: string | null;
      school?: string | null;
      class?: string | null;
      date_of_birth?: string | null;
      country?: string | null;
      state?: string | null;
      city?: string | null;
      address?: string | null;
      gender?: string | null;
      status?: string;
      created_at?: string;
      role?: string[];
    };
    AuthTokens: {
      access_token: string;
      user: components["schemas"]["User"];
    };
    ProfileUpdateData: {
      name?: string;
      username?: string;
      phone?: string;
      school?: string;
      class?: string;
      date_of_birth?: string;
      country?: string;
      state?: string;
      city?: string;
      address?: string;
      gender?: string;
      role?: string;
      child_email?: string;
      child_phone?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
